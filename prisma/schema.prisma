// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// const userSchema = new Schema<IMessage>({
//   authorId: { type: String, required: true },
//   messageId: { type: String, required: true },
//   content: { type: String, required: false },
//   message: { type: JSON, required: true },
//   deleted: { type: Boolean, required: true, default: false },
//   edits: { type: Array<JSON>, required: false },
// });

model Message {
  id                    String              @id @default(auto()) @map("_id") @db.ObjectId
  author                User                @relation(fields: [authorId], references: [discordId])
  authorId              String              @db.String
  message               Json
  messageId             String              @unique
  content               String              @default("")
  deleted               Boolean             @default(false)
  edits                 Json[]              @default([])
}     

model User {      
  id                    String              @id @default(auto()) @map("_id") @db.ObjectId
  discordId             String              @db.String @unique
  email                 String
  // One to many
  messages              Message[]
  // One to Many
  pingSettings          PingSettings[]
}

model PingSettings {      
  id                    String              @id @default(auto()) @map("_id") @db.ObjectId
  user                  User                @relation(fields: [userId], references: [discordId])
  userId                String              @db.String
  gameName              String
  emote                 String

  @@unique([userId, gameName])
} 
